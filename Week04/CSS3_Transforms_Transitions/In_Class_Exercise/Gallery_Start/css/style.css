@import url('https://fonts.googleapis.com/css2?family=Kaushan+Script&display=swap');
/* font-family: "Kaushan Script", cursive; */

* {
  margin: 0;
  padding: 0;
}

html {
  /* this is how we get a full sized fixed centered background */
  background: url('../img/bg.jpg') no-repeat center center fixed;
  background-size: cover;
}

/* apply default font style at the body
tag and all children elements will inherit
it unless we override it with another style
 further down */
body {
  font-family: 'Kaushan Script', cursive;
}

/* Navigation */

header{
  width: 80%;
  padding: 0 10%;
  height: 50px;
  overflow-y: hidden;
  position:fixed;
  top:0;
  left:0;
  margin-bottom: 10px;
  /* Increase z-index to pull item forward */
  z-index: 10;
  background-color: white;
  display:flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  background: url('../moroccan-flower.png');
}

header h1{
  color:#ccc; 
}

nav ul {
  display: flex;
 list-style-type: none;
 text-align: center;
 background-color: rgba(40,40,40,0.1);
}

nav li {
  font-size: 18px;
  height: 50px;
  line-height: 50px;
  width: 120px;
}

nav a{
  text-decoration: none;
  color: #000000;
  display: block;
  /* We always define our transition on the initial style */
  transition: all 1s;
}

nav a:hover {
  /* These properties will animate because of the transition above */
  background-color: #eee;
  color:rgb(0, 0, 0);
}

nav a.active {
  background-color: white;
  color: red;
}

/*Gallery*/
.container {
  width: 900px;
  margin: 100px auto;
  /* when we use inline block
  to stack things we have to zero out
  the font size on the container element */
  font-size: 0;
}

.polaroid {
  width: 260px;
  margin: 20px;
  display: inline-block;
  /* WHENEVER YOU WANT A CHILD ELEMENT TO
  POSITION WITHIN A PARENT ELEMENT, YOU HAVE
  TO RELATIVE POSITION THE PARENT*/
  position: relative;
}
/*  whenever you style an image, its usually best practice to 
make the image take up 100% of its parent element and 
then give the parent a width and height */
.polaroid img {
  width: 100%;
  height: auto;
  /* border shorthand is 1- width, style, color */
  border: 10px solid #ccc;
  border-bottom-width: 45px;
}

.polaroid p {
  font-size: 1rem;
  position: absolute;
  bottom: 14px;
  width: 280px;
  text-align: center;
  color: #333;
}

/* Transforms */
.scaleUP {
  transform: scale(1.2);
  z-index: 20;
}

.scaleX {
  transform: scaleX(2);
  z-index: 20;
}

.scaleY {
  transform: scale(1,2);
}

.skewX {
  transform: skewX(-20deg);
}

.skewY {
  transform: skewY(-20deg);
}

.skewBoth {
  transform: skew(10deg,30deg);
}

.rotX {
  transform: rotateX(180deg);
}

.rotY {
  transform: rotateY(180deg);
}

.rotZ {
  transform: rotateZ(120deg);
}

.rotateLeft{
  transform: rotate(-20deg);
  transition: all 5s ease-in-out;
}

.rotateLeft:hover {
  transform: rotate(20deg);
  cursor: pointer;
}

.skewHover {
  transform: skewX(-30deg);
  transition: all 5s ease;
}

.skewHover:hover {
  transform: skewX(30deg)
}

.scaleHover {
  transform: scale(0.5);
  transition: all 5s ease-in;
}

.scaleHover:hover {
  transform: scale(1.5);
}

.colorSwap {
  filter: grayscale(100%);
  transition: all 2s ease-out;
}

.colorSwap:hover {
  filter: grayscale(0);
}